var __extends=this.__extends||function(n,t){function i(){this.constructor=n}i.prototype=t.prototype,n.prototype=new i},ProjectAether;(function(n){var u=function(t){function u(u,f,e,o){var s=this;t.call(this),this.player1=u,this.player2=f,this.currentPlayer=ko.observable(n.Player),this.currentTurn=ko.observable(1),this.currentAction=ko.observable(),this.endTurnButton=new i,this.cancelButton=new r,this.currentPlayer(u),this.board=new n.Board(e,o,u,f),u.init(),f.init(),this.currentAction.subscribe(function(n){s._clearAllTargetValidity(),s.setValidTargets(n)}),this.mainPhaseAction=new n.Actions.MainPhase(this),u.beginTurn(),this.currentAction(this.mainPhaseAction)}return __extends(u,t),u.prototype.cb_selectTarget=function(t){var u,i,r;if(t.targetAction()!==n.TargetActions.None){if(u=this.currentPlayer(),i=this.currentAction(),t instanceof n.Space&&t.value()&&i.getTargetAction(t.value())&&(t=t.value()),!i.getTargetAction(t))throw Error("Not valid target");r=i.perform(t)||this.mainPhaseAction,this.currentAction(r)}},u.prototype.endTurn=function(){this.currentPlayer()===this.player1?this.currentPlayer(this.player2):this.currentPlayer(this.player1),this.currentPlayer().beginTurn()},u.prototype.setValidTargets=function(n){_.each(this._getTargetsForAction(n),function(t){return t.targetAction(n.getTargetAction(t))})},u.prototype.hasValidNonButtonTargets=function(t){return _.filter(this._getTargetsForAction(t),function(i){var r=t.getTargetAction(i);return r!==n.TargetActions.Button&&r!==n.TargetActions.None}).length>0},u.prototype._getAllCards=function(){return _.union(this.player1.cardsInHand(),this.player1.deck.cards,this.player2.cardsInHand(),this.player2.deck.cards)},u.prototype._getAllCreatures=function(){return _.chain(this.board.spaces).map(function(n){return n.value()}).filter(function(t){return t instanceof n.Creature}).value()},u.prototype._getAllPlayers=function(){return[this.player1,this.player2]},u.prototype._getAllSpaces=function(){return this.board.spaces},u.prototype._getAllButtons=function(){return[this.endTurnButton,this.cancelButton]},u.prototype._getAllTargets=function(){return _.union(this._getAllCards(),this._getAllCreatures(),this._getAllPlayers(),this._getAllSpaces(),this._getAllButtons())},u.prototype._clearAllTargetValidity=function(){_.each(this._getAllTargets(),function(t){return t.targetAction(n.TargetActions.None)})},u.prototype._getTargetsForAction=function(t){var r=this,i=[];return _.forEach(t.targetTypes,function(t){switch(t){case n.TargetTypes.Card:i.push.apply(i,r._getAllCards());break;case n.TargetTypes.Creature:i.push.apply(i,r._getAllCreatures());break;case n.TargetTypes.Player:i.push.apply(i,r._getAllPlayers());break;case n.TargetTypes.Space:i.push.apply(i,r._getAllSpaces());break;case n.TargetTypes.Button:i.push.apply(i,r._getAllButtons());break;default:throw Error("Unknown Target Type: "+t);}}),i},u}(n.HasCallbacks),t,i,r;n.Game=u,t=function(){function t(){this.targetAction=ko.observable(n.TargetActions.None)}return t}(),n.Button=t,i=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t}(t),n.EndTurnButton=i,r=function(n){function t(){n.apply(this,arguments)}return __extends(t,n),t}(t),n.CancelButton=r})(ProjectAether||(ProjectAether={}))