var ProjectAether;(function(n){(function(t){var i=function(){function t(t,i){this.board=t,this.creature=i,this.name="Creature Action",this.targetTypes=[n.TargetTypes.Space,n.TargetTypes.Button,n.TargetTypes.Creature]}return t.prototype.getTargetAction=function(t){if(t instanceof n.Space){var i=t,r=this.creature.location(),u=this.creature.movement.current(),f=this.creature.flying.current();return this.board.findEmptySquaresWithinXSteps(r,u,f).contains(i)?n.TargetActions.Move:n.TargetActions.None}if(t instanceof n.Creature)return this._canAttack(t)?n.TargetActions.Attack:n.TargetActions.None;if(t instanceof n.Button)return t instanceof n.CancelButton?n.TargetActions.Button:n.TargetActions.None;throw new n.NotImplementedError;},t.prototype.perform=function(t){var i,r,u;if(t instanceof n.CancelButton)return null;if(t instanceof n.Space)return i=t,r=this.board.getDistance(this.creature.location(),i,this.creature.flying.current()),this.creature.move(i,r),this.creature.isSelected(!1),null;if(t instanceof n.Creature)u=t,this.creature.attack(u);else throw Error("Invalid target");},t.prototype.performMulti=function(){throw Error("Cannot target multiple spaces");},t.prototype._canAttack=function(n){return n?this.creature.canAttack()&&this.board.spacesAreAdjacent(this.creature.location(),n.location()):this.creature.canAttack()},t}();t.CreatureAction=i})(n.Actions||(n.Actions={}));var t=n.Actions})(ProjectAether||(ProjectAether={}))